/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.quanlydiemtruongthpt.UI.GiaoVien;

import com.mycompany.quanlydiemtruongthpt.Controller.*;
import com.mycompany.quanlydiemtruongthpt.DAO.DAO;
import com.mycompany.quanlydiemtruongthpt.Model.HoSoHocSinh;
import com.mycompany.quanlydiemtruongthpt.Model.HocKy;
import com.mycompany.quanlydiemtruongthpt.Model.LoaiDiem;
import com.mycompany.quanlydiemtruongthpt.Model.Lop;
import com.mycompany.quanlydiemtruongthpt.Session;

import javax.swing.*;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ItemEvent;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.*;

/**
 *
 * @author nguyenduc
 */
public class DiemBoMonGV extends javax.swing.JFrame {

    /**
     * Creates new form DiemBoMonGV
     */
    public DiemBoMonGV() throws SQLException {
        idGiaoVien = 1;
        idLop = 4;
        idMonHoc = 1;
        idHocKy = 1;

        initComponents();
        setLocationRelativeTo(null);
        loadLop();
        loadHocKy();
        loadTenCot();
        loadBangDiem();

    }
    public DiemBoMonGV(int idGiaoVien, int idMonHoc) throws SQLException {
        this.idGiaoVien = idGiaoVien;
        this.idMonHoc = idMonHoc;
        initComponents();
        setLocationRelativeTo(null);
        loadLop();
        loadHocKy();
        loadTenCot();
        loadBangDiem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        danhSachDiemMoi = new ArrayList<>();
        idLoaiDiems = new HashMap<>();
        danhSachCotTable = new ArrayList<>();
        hoSoHocSinhCtrl = new HoSoHocSinhCtrl();
        lopCtrl = new LopCtrl();
        hocKyCtrl = new HocKyCtrl();
        giaoVienCtrl = new GiaoVienCtrl();

        jPanel1 = new javax.swing.JPanel();
        jLabelHocKy = new javax.swing.JLabel();
        jComboBoxHocKy = new javax.swing.JComboBox<>();
        jLabelLop = new javax.swing.JLabel();
        jComboBoxLop = new javax.swing.JComboBox<>();
        jButtonLuu = new javax.swing.JButton();
        jButtonXuat = new javax.swing.JButton();
        jButtonThoat = new javax.swing.JButton();
        jButtonTinhDiemTongKet = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Nhập điểm cho cho bộ môn");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelHocKy.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabelHocKy.setText("Học kỳ:");

        jComboBoxHocKy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxHocKy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                try {
                    jComboBoxHocKyItemStateChanged(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jLabelLop.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabelLop.setText("Lớp:");

        jComboBoxLop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxLop.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                try {
                    jComboBoxLopItemStateChanged(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jButtonLuu.setText("Lưu");
        jButtonLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonLuuActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jButtonXuat.setText("Xuất");
        jButtonXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonXuatActionPerformed(evt);
            }
        });

        jButtonThoat.setText("Thoát");
        jButtonThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonThoatActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jButtonTinhDiemTongKet.setText("Tính điểm tổng kết");
        jButtonTinhDiemTongKet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonTinhDiemTongKetActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelHocKy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxHocKy, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabelLop)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxLop, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(jButtonLuu)
                .addGap(18, 18, 18)
                .addComponent(jButtonXuat)
                .addGap(118, 118, 118)
                .addComponent(jButtonTinhDiemTongKet)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 384, Short.MAX_VALUE)
                .addComponent(jButtonThoat)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHocKy)
                    .addComponent(jComboBoxHocKy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLop)
                    .addComponent(jComboBoxLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLuu)
                    .addComponent(jButtonXuat)
                    .addComponent(jButtonThoat)
                    .addComponent(jButtonTinhDiemTongKet))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        danhSachHocSinh = (DefaultTableModel) jTable1.getModel();
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.getDefaultEditor(Object.class).addCellEditorListener(new CellEditorListener() {
            @Override
            public void editingStopped(ChangeEvent changeEvent) {
                int row = jTable1.getSelectedRow();
                int col = jTable1.getSelectedColumn();

                int idHocSinh = (int) jTable1.getValueAt(row, 0);

                String colName = jTable1.getModel().getColumnName(col);
                if (colName.equals("ID")|| colName.equals("Họ tên") || colName.equals("Giới tính") || colName.equals("Điểm tổng kết môn")) return;
                int idLoaiDiem = idLoaiDiems.get(colName);

                float diemMoi = Float.parseFloat((String) jTable1.getValueAt(row, col));

                DiemHocSinh diemHocSinh = new DiemHocSinh(idHocSinh, idMonHoc, idHocKy, idLoaiDiem, diemMoi);

                danhSachDiemMoi.add(diemHocSinh.returnDiem());

            }

            @Override
            public void editingCanceled(ChangeEvent changeEvent) {

            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLuuActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButtonLuuActionPerformed
        int choice = JOptionPane.showConfirmDialog(null, "Bạn có muốn lưu thay đổi?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            giaoVienCtrl.updateDiemMoi(danhSachDiemMoi);

            loadBangDiem();
        } else {
            return;
        }

    }//GEN-LAST:event_jButtonLuuActionPerformed

    private void jButtonXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonXuatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonXuatActionPerformed

    private void jButtonThoatActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButtonThoatActionPerformed
        dispose();
        HomeGiaoVien homeGiaoVien = new HomeGiaoVien(Session.getUserIdLogged(), Session.getIdMonHocGiangDay());
        homeGiaoVien.setVisible(true);
    }//GEN-LAST:event_jButtonThoatActionPerformed

    private void jComboBoxHocKyItemStateChanged(java.awt.event.ItemEvent evt) throws SQLException {//GEN-FIRST:event_jComboBoxHocKyItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String str = (String) jComboBoxHocKy.getSelectedItem();
            idHocKy = hocKyCtrl.getIdHocKyByTenHocKy(str);
        }
    }//GEN-LAST:event_jComboBoxHocKyItemStateChanged

    private void jComboBoxLopItemStateChanged(java.awt.event.ItemEvent evt) throws SQLException {//GEN-FIRST:event_jComboBoxLopItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String str = (String) jComboBoxLop.getSelectedItem();
            String[] parts = str.split("-");
            idLop = Integer.parseInt(parts[0].trim());
            loadBangDiem();
        }
    }//GEN-LAST:event_jComboBoxLopItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonTinhDiemTongKetActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButtonTinhDiemTongKetActionPerformed
        giaoVienCtrl.tinhDiemTongKetHocKyBoMon(idMonHoc, idLop, idHocKy);
        loadBangDiem();
    }//GEN-LAST:event_jButtonTinhDiemTongKetActionPerformed

    private void loadHocKy() throws SQLException {
        List<HocKy> hocKys = hocKyCtrl.getAllHocKy();
        jComboBoxHocKy.removeAllItems();
        for (int i = 0; i<hocKys.size(); i++) {
            jComboBoxHocKy.addItem(hocKys.get(i).getTenHocKy());
            if (hocKys.get(i).getHocKyHienTai()) jComboBoxHocKy.setSelectedItem(hocKys.get(i).getTenHocKy());
        }
        String tenHocKy = (String) jComboBoxHocKy.getSelectedItem();
        idHocKy = hocKyCtrl.getIdHocKyByTenHocKy(tenHocKy);
    }

    private void loadLop() throws SQLException {
        jComboBoxLop.removeAllItems();
        List<Lop> lops = giaoVienCtrl.getDanhSachLopByIdGiaoVien(idGiaoVien);
        for (int i = 0 ; i<lops.size(); i++) {
            jComboBoxLop.addItem(lops.get(i).getId()+"-"+lops.get(i).getTenLop());
        }

        String str = (String) jComboBoxLop.getSelectedItem();
        String[] parts = str.split("-");
        idLop = Integer.parseInt(parts[0].trim());
    }

    private void loadBangDiem() throws SQLException {
        if (danhSachHocSinh.getRowCount()>0) danhSachHocSinh.setRowCount(0);
        ResultSet resultSet =  giaoVienCtrl.getBangDiemByLop(idGiaoVien, idMonHoc, idHocKy, idLop);

        ResultSetMetaData metaData = resultSet.getMetaData();
        int columnCount = metaData.getColumnCount();
        List<String> danhSachCot = new ArrayList<>();
        for (int i = 2; i <= columnCount; i++) {
            danhSachCot.add(metaData.getColumnName(i));
        }

        while (resultSet.next()) {
            int idHocSinh = resultSet.getInt("HocSinh_Id");

            HoSoHocSinh hoSoHocSinh =  hoSoHocSinhCtrl.getHoSoHocSinhById(idHocSinh);
            String hoTen = hoSoHocSinh.getHoTen();
            String gioiTinh = hoSoHocSinh.getGioiTinh();

            Object[] row = {idHocSinh, hoTen, gioiTinh};

            // lấy danh sách điểm học kỳ
            for (int i = 0; i < danhSachCot.size(); i++) {
                String cot = danhSachCot.get(i).toString();
                float diem = resultSet.getFloat(cot);
                row = Arrays.copyOf(row, row.length + 1);
                row[row.length - 1] = diem;
            }

            // lấy điểm trung bình học kỳ
            HocKy hocKy = hocKyCtrl.getHocKyById(idHocKy);
            String tenHocKy = hocKy.getTenHocKy();
            Float diemTongKet = giaoVienCtrl.getDiemTongKetHocKyBoMonCuaHocSinh(idHocSinh, idMonHoc, tenHocKy);
            row = Arrays.copyOf(row, row.length + 1);
            row[row.length - 1] = diemTongKet;

            danhSachHocSinh.addRow(row);
        }
    }

    private void loadTenCot() throws SQLException {
        danhSachHocSinh.addColumn("ID");
        danhSachHocSinh.addColumn("Họ tên");
        danhSachHocSinh.addColumn("Giới tính");
        LoaiDiemCtrl loaiDiemCtrl = new LoaiDiemCtrl();
        List<LoaiDiem> loaiDiems = loaiDiemCtrl.getAllLoaiDiem();
        for (int i = 0; i<loaiDiems.size(); i++) {
            danhSachHocSinh.addColumn(loaiDiems.get(i).getTenLoaiDiem());
            idLoaiDiems.put(loaiDiems.get(i).getTenLoaiDiem(), loaiDiems.get(i).getId());
        }
        danhSachHocSinh.addColumn("Điểm tổng kết môn");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiemBoMonGV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiemBoMonGV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiemBoMonGV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiemBoMonGV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DiemBoMonGV().setVisible(true);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLuu;
    private javax.swing.JButton jButtonThoat;
    private javax.swing.JButton jButtonTinhDiemTongKet;
    private javax.swing.JButton jButtonXuat;
    private javax.swing.JComboBox<String> jComboBoxHocKy;
    private javax.swing.JComboBox<String> jComboBoxLop;
    private javax.swing.JLabel jLabelHocKy;
    private javax.swing.JLabel jLabelLop;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel danhSachHocSinh;
    private HocKyCtrl hocKyCtrl;
    private LopCtrl lopCtrl;
    private HoSoHocSinhCtrl hoSoHocSinhCtrl;
    private int idGiaoVien;
    private int idMonHoc;
    private int idHocKy;
    private int idLop;
    private GiaoVienCtrl giaoVienCtrl;

    List<String> danhSachCotTable;
    Map<String, Integer> idLoaiDiems;
    private List<Object[]> danhSachDiemMoi;
    public class DiemHocSinh {
        private int HocSinhId;
        private int MonHocId;
        private int HocKyId;
        private int LoaiDiemId;
        private float DiemMoi;


        public DiemHocSinh() {
        }

        public DiemHocSinh(int hocSinhId, int monHocId, int hocKyId, int loaiDiemId, float diemMoi) {
            HocSinhId = hocSinhId;
            MonHocId = monHocId;
            HocKyId = hocKyId;
            LoaiDiemId = loaiDiemId;
            DiemMoi = diemMoi;
        }

        public int getHocSinhId() {
            return HocSinhId;
        }

        public void setHocSinhId(int hocSinhId) {
            HocSinhId = hocSinhId;
        }

        public int getMonHocId() {
            return MonHocId;
        }

        public void setMonHocId(int monHocId) {
            MonHocId = monHocId;
        }

        public int getHocKyId() {
            return HocKyId;
        }

        public void setHocKyId(int hocKyId) {
            HocKyId = hocKyId;
        }

        public int getLoaiDiemId() {
            return LoaiDiemId;
        }

        public void setLoaiDiemId(int loaiDiemId) {
            LoaiDiemId = loaiDiemId;
        }

        public float getDiemMoi() {
            return DiemMoi;
        }

        public void setDiemMoi(float diemMoi) {
            DiemMoi = diemMoi;
        }

        public Object[] returnDiem () {
            Object[] objects = {this.getHocSinhId(), this.getMonHocId(), this.getHocKyId(), this.getLoaiDiemId(), this.getDiemMoi()};
            return objects;
        }
    }
}
