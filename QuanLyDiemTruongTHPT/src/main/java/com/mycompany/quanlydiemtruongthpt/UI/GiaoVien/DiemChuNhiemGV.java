/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.quanlydiemtruongthpt.UI.GiaoVien;

import com.mycompany.quanlydiemtruongthpt.Controller.*;
import com.mycompany.quanlydiemtruongthpt.Model.*;
import com.mycompany.quanlydiemtruongthpt.Session;

import javax.swing.*;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.*;
import java.util.List;

/**
 *
 * @author luongthihanh
 */
public class DiemChuNhiemGV extends javax.swing.JFrame {

    /**
     * Creates new form JFrame
     */
    public DiemChuNhiemGV() throws SQLException {
        initComponents();
        this.idLop = 4;
        this.idGiaoVien = 1;


        setLocationRelativeTo(null);
    }

    public DiemChuNhiemGV(int idGiaoVien, int idLop) throws SQLException {
        initComponents();

        this.idGiaoVien = idGiaoVien;
        this.idLop = idLop;
        String tenLop =  lopCtrl.getTenLopById(idLop);
        jTextFieldLop.setText(tenLop);
        loadHocKy();
        loadDanhSach();

        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() throws SQLException {
        listIdHanhKiem = new HashMap<>();
        listUpdateHanhKiems = new HashMap<>();
        itemHanhKiem = new String[]{};
        namHocCtrl = new NamHocCtrl();
        hocKyCtrl = new HocKyCtrl();
        giaoVienCtrl = new GiaoVienCtrl();
        ketQuaHocSinhCtrl = new KetQuaHocSinhCtrl();
        lopCtrl = new LopCtrl();
        danhSachTenHocKy = new ArrayList<>();

        jPanel1 = new javax.swing.JPanel();
        jButtonLuu = new javax.swing.JButton();
        jButtonXuat = new javax.swing.JButton();
        jButtonThoat = new javax.swing.JButton();
        jLabelLop = new javax.swing.JLabel();
        jTextFieldLop = new javax.swing.JTextField();
        jLabelHocKy = new javax.swing.JLabel();
        jComboBoxNamHoc = new javax.swing.JComboBox<>();
        jButtonTinhDiemTongKetNamHoc = new javax.swing.JButton();
        jButtonTinhDiemHocKy = new javax.swing.JButton();
        jComboBoxHocKy = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButtonDanhGiaKetQua = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Nhập điểm cho lớp chủ nhiệm");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonLuu.setText("Lưu");
        jButtonLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonLuuActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jButtonXuat.setText("Xuất");
        jButtonXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonXuatActionPerformed(evt);
            }
        });

        jButtonThoat.setText("Thoát");
        jButtonThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonThoatActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jLabelLop.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabelLop.setText("Tên lớp:");

        jTextFieldLop.setEditable(false);
        jTextFieldLop.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N

        jLabelHocKy.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabelHocKy.setText("Năm học:");

        jComboBoxNamHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxNamHoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxNamHocItemStateChanged(evt);
            }
        });

        jButtonTinhDiemTongKetNamHoc.setText("Tính điểm tổng kết năm học");
        jButtonTinhDiemTongKetNamHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonTinhDiemTongKetNamHocActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jButtonTinhDiemHocKy.setText("Tính điểm học kỳ");
        jButtonTinhDiemHocKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonTinhDiemHocKyActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jComboBoxHocKy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Chọn học kỳ:");

        jButtonDanhGiaKetQua.setText("Đánh giá kết quả");
        jButtonDanhGiaKetQua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButtonDanhGiaKetQuaActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelLop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldLop, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelHocKy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxNamHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxHocKy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonTinhDiemHocKy)
                .addGap(42, 42, 42)
                .addComponent(jButtonTinhDiemTongKetNamHoc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDanhGiaKetQua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLuu)
                .addGap(18, 18, 18)
                .addComponent(jButtonXuat)
                .addGap(18, 18, 18)
                .addComponent(jButtonThoat)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLuu)
                    .addComponent(jButtonXuat)
                    .addComponent(jButtonThoat)
                    .addComponent(jLabelLop)
                    .addComponent(jTextFieldLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelHocKy)
                    .addComponent(jComboBoxNamHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonTinhDiemTongKetNamHoc)
                    .addComponent(jButtonTinhDiemHocKy)
                    .addComponent(jComboBoxHocKy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonDanhGiaKetQua))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                }
        ));

        danhSach = (DefaultTableModel) jTable1.getModel();
        loadNamHoc();
        loadDanhSachTenHocKy();
        loadTenCot();
        loadHanhKiem();

        int indexCol = danhSach.findColumn("Hạnh kiểm");
        comboBox = new JComboBox<>(itemHanhKiem);
        jTable1.getColumnModel().getColumn(indexCol).setCellEditor(new DefaultCellEditor(comboBox));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    jTable1MouseClicked(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1407, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 748, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonThoatActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButtonThoatActionPerformed
        dispose();
        HomeGiaoVien homeGiaoVien = new HomeGiaoVien(Session.getUserIdLogged(), Session.getIdMonHocGiangDay());
        homeGiaoVien.setVisible(true);
    }//GEN-LAST:event_jButtonThoatActionPerformed

    private void jButtonLuuActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButtonLuuActionPerformed
        loadUpdateNewHanhKiem();
        giaoVienCtrl.updateHanhKiem(listUpdateHanhKiems, idNamHoc);
        loadDanhSach();
    }//GEN-LAST:event_jButtonLuuActionPerformed

    private void jButtonXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonXuatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonXuatActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) throws SQLException {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        int col = jTable1.getSelectedColumn();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBoxNamHocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxNamHocItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxNamHocItemStateChanged

    private void jButtonTinhDiemTongKetNamHocActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButtonTinhDiemTongKetNamHocActionPerformed
        String tenNamHoc = (String) jComboBoxNamHoc.getSelectedItem();
        namHocCtrl.getIdNamHocByName(tenNamHoc);
        giaoVienCtrl.tinhDiemTongKetNamHoc(idLop, idNamHoc);
        loadDanhSach();
    }//GEN-LAST:event_jButtonTinhDiemTongKetNamHocActionPerformed

    private void jButtonTinhDiemHocKyActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButtonTinhDiemHocKyActionPerformed
        tenHocKy = (String) jComboBoxHocKy.getSelectedItem();
        int idHocKy = hocKyCtrl.getIdHocKyByTenHocKy(tenHocKy);
        giaoVienCtrl.tinhDiemTongKetHocKy(idLop, idHocKy);

        loadDanhSach();
    }//GEN-LAST:event_jButtonTinhDiemHocKyActionPerformed
    private void jButtonDanhGiaKetQuaActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButtonTinhDiemHocKyActionPerformed
        giaoVienCtrl.danhGiaKetQuaNamHoc(idLop, idNamHoc);
        loadDanhSach();
    }//GEN-LAST:event_jButtonTinhDiemHocKyActionPerformed
    private void loadDanhSach() throws SQLException {
        if (danhSach.getRowCount()>0) danhSach.setRowCount(0);

        List<HoSoHocSinh> hoSoHocSinhs = lopCtrl.getAllHocSinhByIdLop(idLop);
        for (int i = 0; i<hoSoHocSinhs.size(); i++) {
            int HocSinhId= hoSoHocSinhs.get(i).getId();
            String hoTen = hoSoHocSinhs.get(i).getHoTen();
            String gioiTinh = hoSoHocSinhs.get(i).getGioiTinh();

            Object[] row = {HocSinhId, hoTen, gioiTinh};

            for (int j = 0; j <danhSachTenHocKy.size();j++) {
                Float diem = giaoVienCtrl.getDiemTongKetHocKyCua1HocSinh(HocSinhId, danhSachTenHocKy.get(j).toString());

                row = Arrays.copyOf(row, row.length + 1);
                row[row.length - 1] = diem;
            }

            Float diem = giaoVienCtrl.getDiemTongKetNam(HocSinhId, idNamHoc);
            row = Arrays.copyOf(row, row.length + 1);
            row[row.length - 1] = diem;

            ResultSet resultSet = giaoVienCtrl.getKetQuaDanhGiaCuaHocSinh(HocSinhId, idNamHoc);
            if (resultSet.next()) {
                String TenHanhKiem = resultSet.getString("TenHanhKiem");
                row = Arrays.copyOf(row, row.length + 1);
                row[row.length - 1] = TenHanhKiem;

                String TenHocLuc = resultSet.getString("TenHocLuc");
                row = Arrays.copyOf(row, row.length + 1);
                row[row.length - 1] = TenHocLuc;

                String TenKetQua = resultSet.getString("TenKetQua");
                row = Arrays.copyOf(row, row.length + 1);
                row[row.length - 1] = TenKetQua;
            }
            danhSach.addRow(row);
        }
    }
    private void loadUpdateNewHanhKiem() {
        int rowDanhSach = danhSach.getRowCount();
        int colHanhKiem = danhSach.findColumn("Hạnh kiểm");
        for (int i = 0; i< rowDanhSach; i++) {
            String tenHanhKiem = (String) jTable1.getValueAt(i, colHanhKiem);
            int idHanhKiem = listIdHanhKiem.get(tenHanhKiem);

            int idHocSinh = (int) jTable1.getValueAt(i, 0);

            listUpdateHanhKiems.put(idHocSinh,idHanhKiem);
        }
    }
    private void loadTenCot() {
        danhSach.addColumn("ID Học sinh");
        danhSach.addColumn("Họ tên");
        danhSach.addColumn("Giới tính");
        for (int i = 0; i<danhSachTenHocKy.size(); i++) {
            danhSach.addColumn(danhSachTenHocKy.get(i).toString());
        }

        danhSach.addColumn("Điểm tổng kết năm");
        danhSach.addColumn("Hạnh kiểm");
        danhSach.addColumn("Học lực");
        danhSach.addColumn("Kết quả");
    }
    private void loadDanhSachTenHocKy() throws SQLException {
        NamHocCtrl namHocCtrl1 = new NamHocCtrl();
        List<HocKy> hocKys = namHocCtrl1.getDanhSachHocKyByIdNamHoc(idNamHoc);
        for (int i = 0 ; i<hocKys.size(); i++ ){
            danhSachTenHocKy.add(hocKys.get(i).getTenHocKy());
        }
    }
    private void loadNamHoc() throws SQLException {
        List<NamHoc> namHocs = namHocCtrl.getAllNamHoc();
        jComboBoxNamHoc.removeAllItems();
        for(int i = 0; i<namHocs.size(); i++) {
            jComboBoxNamHoc.addItem(namHocs.get(i).getId() +"-"+ namHocs.get(i).getTenNamHoc());
        }
        String str = (String) jComboBoxNamHoc.getSelectedItem();
        String[] parts = str.split("-");
        idNamHoc = Integer.parseInt(parts[0].trim());
    }
    private void loadHanhKiem() throws SQLException {
        List<HanhKiem> hanhKiems = new HanhKiemCtrl().getAllHanhKiem();


        for (int i = 0;i< hanhKiems.size(); i++) {
            listIdHanhKiem.put(hanhKiems.get(i).getTenHanhKiem(),hanhKiems.get(i).getId());
            itemHanhKiem = Arrays.copyOf(itemHanhKiem, itemHanhKiem.length+1);
            itemHanhKiem[itemHanhKiem.length -1] = hanhKiems.get(i).getTenHanhKiem();
        }

    }
    private void loadHocKy() throws SQLException {
        jComboBoxHocKy.removeAllItems();
        List<HocKy> hocKys = namHocCtrl.getDanhSachHocKyByIdNamHoc(idNamHoc);
        for (int i = 0; i<hocKys.size(); i++) {
            jComboBoxHocKy.addItem(hocKys.get(i).getTenHocKy());
        }
        tenHocKy = (String) jComboBoxHocKy.getSelectedItem();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiemChuNhiemGV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiemChuNhiemGV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiemChuNhiemGV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiemChuNhiemGV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DiemChuNhiemGV().setVisible(true);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDanhGiaKetQua;
    private javax.swing.JButton jButtonLuu;
    private javax.swing.JButton jButtonThoat;
    private javax.swing.JButton jButtonTinhDiemHocKy;
    private javax.swing.JButton jButtonTinhDiemTongKetNamHoc;
    private javax.swing.JButton jButtonXuat;
    private javax.swing.JComboBox<String> jComboBoxHocKy;
    private javax.swing.JComboBox<String> jComboBoxNamHoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelHocKy;
    private javax.swing.JLabel jLabelLop;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldLop;
    // End of variables declaration//GEN-END:variables
    private int idGiaoVien;
    private int idLop;
    private int idNamHoc;
    private String tenHocKy;
    private DefaultTableModel danhSach;
    private NamHocCtrl namHocCtrl;
    private HocKyCtrl hocKyCtrl;
    private GiaoVienCtrl giaoVienCtrl;
    private KetQuaHocSinhCtrl ketQuaHocSinhCtrl;
    private LopCtrl lopCtrl;

    private List<String> danhSachTenHocKy;
    private JComboBox<String> comboBox;
    private Map<Integer, Integer> listUpdateHanhKiems;
    private Map<String, Integer> listIdHanhKiem;

    private String[] itemHanhKiem;
    private int rowHK;
    private int colHK;
}
